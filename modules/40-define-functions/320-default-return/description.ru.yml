---

name: Возврат по умолчанию
theory: |

  Представьте себе такую функцию:

  ```php
  <?php

  function doNothing()
  {
      // функция ничего не делает, не принимает аргументов
      // и ничего не возвращает
  }
  ```

  Если мы попробуем вызвать функцию выше и записать результат ее вызова в переменную: `$result = doNothing()`, то все отработает. С точки зрения интерпретатора в этом коде все хорошо. Но с точки зрения нашей логики есть противоречия. Я сказал что мы записываем результат функции в переменную, но внутри функции нет инструкции `return`! Другими словами она ничего не возвращает. Казалось бы парадокс.

  Достаточно вспомнить что вызов функции - выражение. Из этого утверждения автоматически следует что функция возвращает результат __всегда__. А вот чем он будет, зависит от ситуации. Если в результате выполнения функции, код не наткнулся ни на одну инструкцию `return`, то интерпретатор автоматически возвращает из функции значение `null`. Кстати это не отменяет того факта, что `null` можно вернуть явно написав `return null` в теле функции.

  Забытый возврат - любимая ошибка новичка работающего с функциями. На хекслете каждый день кто-нибудь пишет "логика точно правильная, но почему-то не работает" и почти всегда оказывается что забыт `return`.


instructions: |

  Реализуйте функцию `getNull`, которая просто возвращает `null`.



tips: []

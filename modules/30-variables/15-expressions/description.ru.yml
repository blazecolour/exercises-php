---

name: Выражения в определениях
theory: |

  Дублирование - не единственная причина использовать переменные. Они так же помогают разбить сложное вычисление на отдельные шаги. Опять же, компьютеру от этого ни тепло ни холодно, но зато гораздо проще людям. Предположим что у нас есть рубли и мы хотим перевести их в евро, но через доллары. Так часто делают банки, когда транзакция совершается за рубежом. Хотя это вычисление довольно тривиально и не особо нуждается в промежуточных шагах, мы все же рассмотрим именно его, чтобы не нагружаться лишними вычислительными деталями. Рассмотренные подходы одинаково работают для сколь угодно сложных вычислений.

  Для начала переведем рубли в доллары:

  ```php
  <?php

  // 50 рублей умножаем на стоимость доллара. Курс на момент записи.
  $dollars = 50 * 60;
  print_r($dollars);
  ```

  Возможно вы удивитесь, но в коде выше нет нового синтаксиса, есть только комбинация изученного ранее. В предыдущем уроке, мы инициализировали нашу переменную конкретной строкой, а здесь, справа от знака равно, арифметическое выражение. Но на самом деле, строка это тоже выражение, так же как и обычное число и любые другие данные. С точки зрения интерпретатора не важно что перед ним `5` или `3 + 2`, для него и то и то выражения, которые надо вычислить. И они вычисляются в одно и тоже значение - `5`.

  Правила построения кода (грамматика языка) на языках таковы, что в тех местах где ожидается выражение, можно поставить любое вычисление и программа останется работоспособной. По этой причине невозможно описать и показать все случаи использования всех операций. Важно чтобы вы ухватили суть и сами начали понимать как можно комбинировать. Основываясь на сказанном выше, подумайте (и запустите на https://repl.it) сработает ли такой код?

  ```php
  <?php

  $who = "dragon's" . 'mother';
  print_r($who);
  ```

  Теперь программа целиком:

  ```php
  <?php

  $rubles = 50;
  $dollars = 50 * 60; // => 3000
  $euros = $dollars * 1.2; // => 3600
  print_r($euros);
  ```

  Здесь мы видим расширенное использование переменных. Любая переменная может быть частью любого выражения. В момент вычисления, вместо имени переменной подставляется ее значение.

  В этом коде крайне важно что вычисление `$dollars` происходит до того как эта же переменная начнет использоваться в других выражениях.

instructions: |

  Напишите программу, которая берет исходное количество евро записанных в переменную `$euros`, переводит их в доллары и распечатывает, затем переводит их в рубли и распечатывает на отдельной строчке. Вывод для 100 евро должен быть таким:

  ```
  80
  480
  ```

  * Считаем что 1 доллар - 0.8 евро и 1 доллар - 60 рублей.
  Для перевода строки можно вставить вывод `\n` между выводом долларов и рублей.


tips: []

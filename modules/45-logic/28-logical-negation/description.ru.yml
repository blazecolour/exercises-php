---

name: Отрицание
theory: |

  В логике, наряду с конъюнкцией и дизъюнкцией часто используется операция "отрицание". В программировании ей соответствует унарный оператор "!". Если предположить что у нас есть функция проверяющая четное ли число, то используя отрицание, можно выполнить проверку на то, является ли число нечетным: `!isEven($number)`. То есть мы просто добавили "!" слева от вызова функции и получили обратное действие. Отрицание мощный инструмент, который позволяет лаконично выражать задуманные правила в коде без необходимости писать новые функции.

  А что если написать так `!!isEven($number)`? Внезапно, но код отработает. С точки зрения логики, двойное отрицание подобно отсутствию отрицания вообще. В программировании также, но еще дополнительно происходит преобразования типа. Поэтому результатом наложения двойного отрицания всегда будет _boolean_. Иногда этим приемом пользуются только для того чтобы поменять тип данных.

instructions: |

  Реализуйте функцию `isNotLannisterSoldier`, которая проверяет что солдат не принадлежит Ланнистерам. Функция принимает на вход такие же аргументы как и функция `isLannisterSoldier`:

  * Цвет доспехов как строчка. Если они красные, то передается _red_.
  * Название изображения на щите. В случае Льва - _lion_. В случа если щита нет, то передается `null`.

  Кроме того, вам доступна функция `isLannisterSoldier`, которой можно воспользоваться для того чтобы не дублировать логику.

tips:
  - |
    [Законы Де Моргана](https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%BA%D0%BE%D0%BD%D1%8B_%D0%B4%D0%B5_%D0%9C%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B0)

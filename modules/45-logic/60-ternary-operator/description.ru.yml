---

name: Тернарный оператор
theory: |

  Посмотрите на определение функции, которая возвращает модуль переданного числа:

  ```php
  <?php

  function abs($number)
  {
      if ($number >= 0) {
          return $number;
      }

      return -$number;
  }
  ```

  Можно ли записать ее лаконичнее? Можно, но для этого нужно чтобы `if` превратился из инструкции в выражение. В php существует конструкция, которая по своему действию аналогична конструкции _if-else_ и, при этом, является выражением. Она называется тернарный оператор. Тенарный оператор, единственный в своем роде требующий для своей работы три операнда:

  ```php
  <?php

  function abs($number)
  {
      return $number >= 0 ? $number : -$number;
  }
  ```

  Общий паттерн выглядит так: _<predicate> ? <expression on true> : <expression on false>.

  Если вы помните в чем сила выражений, то вероятно уже догадались что тернарный оператор можно вкладывать в тернарный оператор. Хочу сразу предупредить, что такая практика считается крайне плохой. Такой код тяжело и читать и отлаживать.

instructions: |

  Реализуйте функцию `convertString`, которая принимает на вход строчку и возвращает ее перевернутый вариант при условии что первая буква не заглавная, если она заглавная, то возвращается сама строчка. Перевернуть строчку можно используя функцию [strrev](http://php.net/manual/en/function.strrev.php).

tips: []

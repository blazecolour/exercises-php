---

name: Условная конструкция
theory: |

  Задача предиката получить ответ на вопрос, но обычно этого недостаточно. Дальше стоит задача выполнить определенное действие, зависящее от ответа. Напишем функцию, которая определяет тип переданного предложения, считаем что в текущей реализации она может определить является ли предложение вопросом.

  ```php
  <?php

  function getTypeOfSentence($sentence)
  {
      $lastChar = substr($sentence, -1); // самый простой способ извлечь последнюю букву в php
      if ($lastChar === '?') {
        return 'question';
      }

      return 'normal';
  }

  getTypeOfSentence('Hodor'); // => normal
  getTypeOfSentence('Hodor?'); // => question
  ```

  `if` - инструкция, которой в скобках передается предикат, а затем описывается блок кода в фигурных скобках. Этот блок кода будет выполнен только в том случае, если предикат истинен. Если он ложен, то блок кода пропускается и функция продолжает свое выполнение дальше. Но в нашей ситуации она не продолжит, потому что внутри `if` используется `return`. Как видите не важно на каком уровне написан `return`. Где бы мы его не написали, он выполнит выход из функции, внутри которой он использован. Дальнейший код функции уже не выполняется.

instructions: |

  Реализуйте функцию `getSentenceTone`, которая определяет тон предложения. Если все символы в верхнем регистре, то считается что это вопль "scream" иначе нормальное предложение "normal". Проверьте регистр предложения следующим способом. Переведите строку в верхний регистр и сравните с ее исходной версией. Если они равны, то строка была в верхнем регистре.

tips: []
